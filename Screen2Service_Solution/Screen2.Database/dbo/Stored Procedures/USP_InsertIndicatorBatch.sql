CREATE PROCEDURE [dbo].[USP_InsertIndicatorBatch]
	@IndicatorsXML XML
AS
	INSERT Into Indicators
	(TradingDate, ShareId,[Close],
	SMA5, SMA10, SMA30, SMA50, SMA200,
	EMA10, EMA20, EMA50,
	BB_Middle, BB_Low, BB_High,
	ADX, ADX_Plus, ADX_Minus,
	MACD, MACD_Signal, MACD_Hist,
	Heikin_Open, Heikin_Close, Heikin_High, Heikin_Low,
	Stochastic_K,Stochastic_D,
	RSI,RSI2, WR,
	Delt_Price,
	Delt_SMA5, Delt_SMA10, Delt_SMA50, Delt_EMA20,
	Delt_MACD, Delt_MACD_Hist, Delt_MACD_Signal,
	Delt_K, Delt_D,
	Delt_Diff_ADX,
	Vol_AVG5, 
	Vol_AVG10, 
	Vol_AVG20,
	Prev_Heikin)
	SELECT CONVERT(int, cast(colx.query('data(TradingDate) ') as varchar)) as [TradingDate],
	CONVERT(int, cast(colx.query('data(ShareId) ') as varchar)) as [ShareId],
	CONVERT(float, cast(colx.query('data(Close) ') as varchar)) as [Close],
	CASE WHEN cast(colx.query('data(SMA5)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(SMA5) ') as varchar)) END as SMA5,
	CASE WHEN cast(colx.query('data(SMA10)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(SMA10) ') as varchar)) END as SMA10,
	CASE WHEN cast(colx.query('data(SMA30)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(SMA30) ') as varchar)) END as SMA30,
	CASE WHEN cast(colx.query('data(SMA50)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(SMA50) ') as varchar)) END as SMA50,
	CASE WHEN cast(colx.query('data(SMA200)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(SMA200) ') as varchar)) END as SMA200,
	CASE WHEN cast(colx.query('data(EMA10)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(EMA10) ') as varchar)) END as EMA10,
	CASE WHEN cast(colx.query('data(EMA20)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(EMA20) ') as varchar)) END as EMA20,
	CASE WHEN cast(colx.query('data(EMA50)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(EMA50) ') as varchar)) END as EMA50,
	CASE WHEN cast(colx.query('data(BB_Middle)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(BB_Middle) ') as varchar)) END as BB_Middle,
	CASE WHEN cast(colx.query('data(BB_Low)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(BB_Low) ') as varchar)) END as BB_Low,
	CASE WHEN cast(colx.query('data(BB_High)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(BB_High) ') as varchar)) END as BB_High,
	CASE WHEN cast(colx.query('data(ADX)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(ADX) ') as varchar)) END as ADX,
	CASE WHEN cast(colx.query('data(ADX_Plus)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(ADX_Plus) ') as varchar)) END as ADX_Plus,
	CASE WHEN cast(colx.query('data(ADX_Minus)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(ADX_Minus) ') as varchar)) END as ADX_Minus,
	CASE WHEN cast(colx.query('data(MACD)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(MACD) ') as varchar)) END as MACD,
	CASE WHEN cast(colx.query('data(MACD_Signal)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(MACD_Signal) ') as varchar)) END as MACD_Signal,
	CASE WHEN cast(colx.query('data(MACD_Hist)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(MACD_Hist) ') as varchar)) END as MACD_Hist,
	CASE WHEN cast(colx.query('data(Heikin_Open)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Heikin_Open) ') as varchar)) END as Heikin_Open,
	CASE WHEN cast(colx.query('data(Heikin_Close)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Heikin_Close) ') as varchar)) END as Heikin_Close,
	CASE WHEN cast(colx.query('data(Heikin_High)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Heikin_High) ') as varchar)) END as Heikin_High,
	CASE WHEN cast(colx.query('data(Heikin_Low)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Heikin_Low) ') as varchar)) END as Heikin_Low,
	CASE WHEN cast(colx.query('data(Stochastic_K)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Stochastic_K) ') as varchar)) END as Stochastic_K,
	CASE WHEN cast(colx.query('data(Stochastic_D)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Stochastic_D) ') as varchar)) END as Stochastic_D,
	CASE WHEN cast(colx.query('data(RSI)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(RSI) ') as varchar)) END as RSI,
	CASE WHEN cast(colx.query('data(RSI2)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(RSI2) ') as varchar)) END as RSI2,
	CASE WHEN cast(colx.query('data(WR)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(WR) ') as varchar)) END as WR,
	CASE WHEN cast(colx.query('data(Delt_Price)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_Price) ') as varchar)) END as xDelt_Price,
	CASE WHEN cast(colx.query('data(Delt_SMA5)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_SMA5) ') as varchar)) END as xDelt_SMA5,
	CASE WHEN cast(colx.query('data(Delt_SMA10)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_SMA10) ') as varchar)) END as xDelt_SMA10,
	CASE WHEN cast(colx.query('data(Delt_SMA50)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_SMA50) ') as varchar)) END as xDelt_SMA50,
	CASE WHEN cast(colx.query('data(Delt_EMA20)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_EMA20) ') as varchar)) END as xDelt_EMA20,
	CASE WHEN cast(colx.query('data(Delt_MACD)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_MACD) ') as varchar)) END as xDelt_MACD,
	CASE WHEN cast(colx.query('data(Delt_MACD_Hist)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_MACD_Hist) ') as varchar)) END as xDelt_MACD_Hist,
	CASE WHEN cast(colx.query('data(Delt_MACD_Signal)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_MACD_Signal) ') as varchar)) END as xDelt_MACD_Signal,
	CASE WHEN cast(colx.query('data(Delt_K)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_K) ') as varchar)) END as xDelt_K,
	CASE WHEN cast(colx.query('data(Delt_D)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_D) ') as varchar)) END as xDelt_D,
	CASE WHEN cast(colx.query('data(Delt_Diff_ADX)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Delt_Diff_ADX) ') as varchar)) END as xDelt_Diff_ADX,
	CASE WHEN cast(colx.query('data(Vol_AVG5)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Vol_AVG5) ') as varchar)) END as xVol_AVG5,
	CASE WHEN cast(colx.query('data(Vol_AVG10)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Vol_AVG10) ') as varchar)) END as xVol_AVG10,
	CASE WHEN cast(colx.query('data(Vol_AVG20)') as varchar) = '' THEN null ELSE CONVERT(float, cast(colx.query('data(Vol_AVG20) ') as varchar)) END as xVol_AVG20,
	CASE WHEN cast(colx.query('data(Prev_Heikin)') as varchar) = '' THEN null ELSE CONVERT(bit, cast(colx.query('data(Prev_Heikin) ') as varchar)) END as xPrev_Heikin
FROM @IndicatorsXML.nodes('ArrayOfIndicator/Indicator') AS Tabx(Colx)
RETURN 0
